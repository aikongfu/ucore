1100000100 1011110111 000000000000




1100000000 0000000000 000000000000

1111100000 0000000000 000000000000


boot_pgdir[PDX(VPT)] = PADDR(boot_pgdir) | PTE_P | PTE_W;
0xc11ae000[0x11ae003] = 0x11ae003


0xc0000000-0xc03FFFFF
4M -> 1024*4KB

1100000000 0000000000 000000000000B
1100000000 1111111111 111111111111B


0x80000000
1000000000 0000000000 000000000000
0000000000 0000000000 000000000000

0x80000000 >> 22 = 1000000000 =  0x200

0xc0390c84
1100000000 1110010000 110010000100
<< 10
1110010000 1100100001 000000000000

0xC0000000
11000000000000000000000000000000
0xC03FFFFFh
11000000001111111111111111111111

1100000000 -> 768d -> 0x300
1100000000 0000000000 000000000000
1100000000 1111111111 111111111111



0x300 < 2 = 0xC00 = 3072d = 110000000000




boot_pgdir = 0xc11ae000
boot_cr3 = 0x11ae000 = 0xc11ae000 - 0xC0000000
VPT
1111101011 0000000000 000000000000

0x11ae000 = 0001000110101110000000000000
0001000110101110000000000000 
0000000100 0110101110 000000000000

0xc11ae000 = 11000001000110101110000000000000 
1100000100 0110101110 000000000000

VPT = [0xfac00000], PDX(VPT) = [0x3eb]
boot_pgdir[PDX(VPT)] = boot_pgdir[0x3eb] = 0x11ae003

0xc11ae000 + 0x3eb = 0xC11AE3EB  -> 0x11ae003

boot_pgdir = [0xc11ae000]
PADDR(boot_pgdir) = [0x11ae000]


-------------------- BEGIN --------------------
PDE(0e0) c0000000-f8000000 38000000 urw
  |-- PTE(38000) c0000000-f8000000 38000000 -rw
PDE(001) fac00000-fb000000 00400000 -rw
  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
--------------------- END ---------------------



110000000000


一个32位的虚拟存储系统有两级页表，其逻辑地址中，第22到31位是第一级页表，12位到21位是第二级页表，页内偏移占0到11位。一个进程的地址空间为4GB，如果从0x80000000开始映射4MB大小页表空间，请问第一级页表（页目录）所占4KB空间的起始地址？并说明理由。（注意B代表字节，一个32位地址占4字节）

0x80000000

4MB = 4 * 1024KB = 4 * 1024 * 1024 = 0x400000

0x80000000 / 4MB

0x80000000 / 0x400000 = 512
即所在的页帧号是512d = 0x200
那么页目录则位于Table 512

页目录的地址
0x80000000 + 512 * 4KB = 0x80200000
页目录项的地址
0x80200000 + 512 * 4B = 0x80200800





0xFAFEB000
1111101011 1111101011 000000000000

0xFAC00000
1111101011 0000000000 000000000000
